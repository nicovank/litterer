name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  macos-clang-check:
    strategy:
      matrix:
        build-type: [Debug, Release]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Install CWhy
        run: pip install cwhy

      - name: Configure CMake
        run: >
          cmake . -B build 
          -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
          -DCMAKE_C_COMPILER=`cwhy --wrapper clang`
          -DCMAKE_CXX_COMPILER=`cwhy --wrapper clang++`
        env:
          CWHY_DISABLE: 1

      - name: Build
        run: cmake --build build --parallel

  windows-msvc-check:
    strategy:
      matrix:
        build-type: [Debug, Release]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Configure CMake
        run: >
          cmake . -B build
          -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
          -DCMAKE_C_COMPILER=`cwhy --wrapper cl`
          -DCMAKE_CXX_COMPILER=`cwhy --wrapper cl`
        env:
          CWHY_DISABLE: 1

      - name: Build
        run: cmake --build build --parallel

  ubuntu-gcc-check:
    strategy:
      matrix:
        build-type: [Debug, Release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Download GCC
        run: sudo apt install -y gcc-11 g++-11

      - name: Configure CMake (GCC)
        run: >
          cmake . -B build
          -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
          -DCMAKE_C_COMPILER=`cwhy --wrapper gcc-11`
          -DCMAKE_CXX_COMPILER=`cwhy --wrapper g++-11`
        env:
          CWHY_DISABLE: 1

      - name: Build
        run: cmake --build build --parallel

  ubuntu-clang-check:
    strategy:
      matrix:
        build-type: [Debug, Release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download LLVM
        run: |
          sudo apt install lsb-release wget software-properties-common gnupg
          curl -sSf https://apt.llvm.org/llvm.sh | sudo bash -s -- 17 all

      - name: Configure CMake (Clang)
        run: >
          cmake . -B build
          -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
          -DCMAKE_C_COMPILER=`cwhy --wrapper clang-17`
          -DCMAKE_CXX_COMPILER=`cwhy --wrapper clang++-17`
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
        env:
          CWHY_DISABLE: 1

      - name: Build
        run: cmake --build build --parallel

      - name: Check clang-format
        if: ${{ matrix.build-type == 'Debug' }}
        run: find src -name '*.cpp' | xargs clang-format-17 --dry-run --Werror

      - name: Check clang-tidy
        if: ${{ matrix.build-type == 'Debug' }}
        run: find src -name '*.cpp' | xargs clang-tidy-17 -p build --warnings-as-errors='*'
